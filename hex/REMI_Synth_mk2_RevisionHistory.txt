
              REMI Synth Module (mk2) -- Firmware Revision History

================================================================================

v2.0.01  2018-08-18
```````````````````
Created new project for mk2 synth module.
Ported code from mk1 source. Modified for mk2 synth operation.

First operating build of mk2 firmware.
This version tested the switched-gain attenuator which was unsatisfactory due
to switching noise in the 74HC4052 analog switch.
The attenuator (74HC4052 analog switch) was removed from the hardware design.

This build doesn't yet support MIDI IN messages.
There is a CLI command "sound" for testing the synth sound generator.

--------------------------------------------------------------------------------
v2.0.21  2018-09-05
```````````````````
Tested mk2 hardware with 3rd-order LPF.  Works great!


Interim builds (not saved):
```````````````````````````
Tried 14-bit PWM audio DAC idea using 2 PWM outputs. This didn't work because
the PIC32 Timer/OCx modules do not function properly, i.e. there is a big glitch
when the PWM duty changes from 1 to 0.  There is no satisfactory workaround.
(See PIC32MX3../4.. errata sheet.)

v2.0.31
```````
Back to simple 11-bit PWM audio DAC. This gives adequate sound quality.
This build can be used for testing the synth sound generator.

v2.0.33 
```````
Both UARTs configured to use RX interrupt and RAM FIFO buffer. Tested OK.
UART1 (MIDI OUT) configured to use TX queue.  Tested OK.
MIDI loop-back test done.  R7 reduced to 2k2 for best opto-coupler rise-time.

--------------------------------------------------------------------------------
v2.0.45  2018-10-20
```````````````````
Firmware supports LCD and 6-button front panel.  Tested OK.

Kernel supports PIC32 core timer (COUNT register read function)
for short delays (typ. up to 1000ns);  needed for KS0108 LCD driver.

v2.0.51  2018-10-25
```````````````````
Improvements to GUI setup and preset screens, etc.
Tested Data Entry function.

v2.0.60  2018-10-29  (Not fully tested.)
```````````````````
Implemented MIDI IN message handler. Incomplete.  


v2.0.70  2019-07-26  (Not tested.)
```````````````````
Modified MIDI SYS.EX. message handling to match handset mk2 protocol.
Added handset detection and connection time-out.

v2.0.80  2019-12-21
```````````````````
Added 'MIDI IN Monitor' function and associated "mimon" command to check MIDI IN
data stream and to generate stats, i.e. counts of various message types.

v2.0.90  2019-12-28
```````````````````
Fixed some bugs in the 'MIDI IN Monitor' function and associated "mimon" command
and added some new functions to it. (This helped to debug the handset firmware!)

Added handset info (received in Sys.Ex. Preset msg) to the synth "info" command.

This build tested OK with the mk2 handset.

There could be some (minor ?) issues with sound quality (aliasing ?), more 
noticeable at the higher end of the amplitude range -- to be investigated.

--------------------------------------------------------------------------------
v2.1.05  2020-01-25
```````````````````
Removed wave-form descriptors for "regenerative" RAM-based wave-tables...
These descriptors are no longer used directly by the synth firmware.
In firmware versions 2.1.xx and later, waveforms cannot be re-generated on demand.
All wave-tables are stored in flash PM, except for one "User" wave-table located
in the RAM buffer. The User wave-table is not regenerated when the active patch
is changed. It can be regenerated from a User wave-form "descriptor" in EEPROM
using command "patch -u". The User wave-table can also be generated or modified
using the "wave creator" utility. The RAM buffer is now intended primarily for 
experimenting with new wave-forms created with the "wav" command.

Most of the "regenerative" RAM-based wave-forms in v2.0 have been replaced with
equivalent wave-forms stored in flash PM resident wave-tables.  Flash wave-table
descriptors have been re-numbered and patch definitions updated accordingly.

The current firmware policy is to limit the number of wave-table definitions to
about 16. Uninspiring legacy wave-forms should be replaced with better sounding
ones -- to be developed using more sophisticated techniques. A Windows utility
"wave-creator" has been developed to replace or complement the PIC32 built-in
wave creator command function. (Details available elsewhere.)

Legacy wave-table data from v2.0 is archived in file: remi_synth_data_v2.0.c.

--------------------------------------------------------------------------------
v2.2.02  2020-02-08
```````````````````
All specified functionality of the REMI mk2 synth "revised patch model" (2020)
implemented, except for the state-variable resonant filter.

More user-settable param's (quasi-constants) have been added to facilitate debug
and testing. These param's can be viewed or adjusted by the CLI "set" command.

float  g_SynthNoiseGain;        // Noise generator gain adjustment (0..100)
float  g_SignalMinPressure;     // Pressure threshold for Noise Mixer signal input
float  g_MixerSignalLevel;      // Noise Mixer signal input, fixed level (0..100 %)
float  g_MixerNoiseLevel;       // Noise Mixer noise input, fixed level (0..100 %)

Also added icon on GUI home screen indicating REMI handset connection status.

<!> Not all functions have been fully tested in this build. Not for release.

Test results:
`````````````
Bug 1:  Audio output level not responding to breath pressure level.

Bug 2:  There are audible perturbations (glitches) in the sound when the handset
        is connected.  The glitches are less severe when played with the "sound" 
        command, while handset connected. Suspect UART ISR delaying Timer2 ISR?

v2.2.08  2020-02-12
```````````````````
Fixed bug #1. Simple mistake.

Improved a few patches.

v2.2.10  2020-02-15
```````````````````
Made some changes to UART driver to try to fix bug #2 -- no success.
(Most times it's almost imperceptible, so a not a big concern. In fact, when
the output is recorded in Audacity and the waveform viewed, no glitches can
be seen, i.e. no visible irregularities in period (timing) or amplitude.)

Added GUI screen to display handset info. It's one of the SETUP screens.

v2.3.05  2020-07-19
```````````````````
Added DSP reverberation effect to audio ISR.  Works like a charm!

Simplified synth model a little (see sketch rev C).
Cleaned up a few minor irregularities in the synth engine code.

v2.3.45  2020-11-01
```````````````````
Modified fixed_t data type format to 12:20 bits for higher precision in DSP,
(but range of integer part is limited to +/-2047).
Wave-table oscillators use a different fixed-point format: 16:16 bits
(because greater integer range is needed).

Added DSP filter - 2nd order resonant IIR LPF/BPF with variable Fc. (Untested)
Noise generator reverted to simple 1st-order IIR filter. (Unsuccessful.)

Added new command option (wav -h) in wave-creator utility.  Added lots of new
wave-tables using Hammond organ-like drawbar additive synthesis method.
Many drawbar settings work really well with OSC2 detuned slightly (3 ~ 7 cents).
(Many wave-tables yet to be tested properly.)

Added new vibrato mode: AUTO ASYMM which modulates OSC1 only. (Untested)
Changed some default patches.

v2.3.50  2020-12-22
```````````````````
Built a custom variant for Chua synth dongle with MIDI baudrate = 38400.

v2.3.51  2021-01-05
```````````````````
Rebuilt with standard MIDI baudrate = 31250.
Added some new patches.

v2.3.52  2021-01-16
```````````````````
Bug fixes and some minor improvements...

Bug 1: On start-up, wrong patch activated for the preset last selected.
Bug 2: CLI command "preset" displayed wrong preset # after a change. 
Bug 3: User Patch "supplied name" not displayed by "preset -i" command. 
Bug 4: CLI command "sound" always uses Preset vibrato mode.

Added a config param, MIDI IN Baudrate (default = 31250), for bluetooth MIDI 
receiver or other device using non-standard baudrate.

Added a config param, Ampld Control Override (boolean, default = 0).
If set true (1), the patch 'AC' param is always ignored and audio output level is
controlled by the Ampld Envelope times Midi Velocity value (squared), to suit MIDI
keyboard controllers and other non-EWI MIDI controller devices.

Deprecated some config param's related to MIDI OUT.. (TX msg intervals, etc).

v2.3.53  2021-02-02
```````````````````
Bug:  MIDI input & synth engine do not function while "watch" cmd is running.

This version is stable and complete except for noise, filter, etc.


v2.3.55  2021-02-06
```````````````````
Revamped noise generator, filter, noise mixer, main filter as per User Guide.
(To be tested.)

Added CLI param: Pressure Gain to compensate for MIDI controller variants,
e.g. REMI handset. Use "set" command to adjust MIDI pressure gain.

Patch OSC2 detune factor range limited to +/-1200 cents (1 octave).

Changed Noise Mode param. (See patch struct def.)  Revised User Guide (v1.3)


v2.3.60  2021-06-23  
```````````````````
Added 4 "non user-settable params" to eeprom config structure, to maintain 
"calibration constants" settable using the "set" command.

Changed PressureGain default to x1.5 to avoid overdriving the Reverb process.

[Note: v2.3.61 is functionally identical... cosmetic changes only.]

________________________________________________________________________________

v2.4.00  2021-12-17  
```````````````````
Changed MPLAB.X project directory structure.

"HardwareProfile.h" is now application-specific, unique to project.
Peripheral drivers are mostly common to all app's since they cannot include
"HardwareProfile.h". * (Drivers are compiled first.)

Minor changes to kernel module. No functional changes.
Examples: "Task pending" functions, MCU clock freq. (info) macros.

Not tested.

v2.4.02  2022-08-29
```````````````````
Removed config param: 'AmpldControlOverride' (... useless!)

Added smoothing filter to expression signal in audio ampld control routine.

Moved "patch" and related CLI functions to CLI module.

MIDI OUT messages can be optionally disabled (new param). 
MIDI OUT mode (mono/poly/omni) param removed (function of external synth).
MIDI OUT config param's settable via CLI only (removed from GUI).
MIDI IN and OUT modulation CC number param removed (fixed at 01,33).

Added "Control Panel" functions to support up to 6 potentiometers...
... not working properly...

Added code to support audio level clipping indicator LED.

Restructured GUI ...
  . MIDI IN/OUT and "misc. settings" (Reverb, etc) combined in SETUP menu;
  . Removed MIDI OUT param's from SETUP list (except MIDI OUT Enable);
  . Added Control Pot Service routine;
  . Added Control Panel screens for using pots to adjust synth/patch variables.

Changed filter patch param's: FF (= Fc offset, semitone), FT (tracking on/off).
When tracking is enabled, MIDI note number is added to FF (capped at 108).

Reverb is broken -- yet to be fixed!
Filter is broken -- yet to be fixed!

v2.4.12  2022-08-??
```````````````````
As above, plus...

Reworked some synth process functions to reduce execution time.
(Made no perceptible difference!)

v2.4.24  2022-09-19
```````````````````
Fixed bug in reverb, now working well.

Fixed bug in GUI Control Panel... was blocking other B/G tasks.
B/G tasks no longer overrunning.
(The doRefresh[] flags were auto variables;  must be static!)

Added diag cmd option (-b) to test 1ms B/G task overrun.
Added diag cmd option (-a) to show audio ISR execution time.

Bi-quad filter to be tested.

________________________________________________________________________________

v3.0.01  2023-03-05
```````````````````
Migrated code to Synth mk3 based on Olimex PIC32-PINGUINO-MICRO (MX440 MCU).

Refer to Synth mk3 (mx440) firmware revision history for subsequent updates,
which will be applied to both mk2 (mx340) and mk3 (mx440) hardware platforms.

Source files prefixed with "remi_synth_" are common to all h/w variants.

________________________________________________________________________________

*** To do **
`````````````````````````````
  . Find optimum gains for noise filter and wave filter, for various patches.
  . Remove superfluous patch definitions and wave-tables.


================================================================================
REMI_Synth_mk2_RevisionHistory.txt                               www.mjbauer.biz  
